:import [Library]

;;; ---------------------------------------------------------------------------
;;; Declarations
:global int region_difficulty ; start with 0, 0-5: first region, 6-11: second-region
:global int tower_testing_type ; 0: Normal, 1: Endless, 2: Challenge, 3: Idle
:local int i

;;; ---------------------------------------------------------------------------
;;; Macros
#kIdleRegion 7

; 0: Easy, 1: Medium, and so on
#kIdleDifficulty 3

;;; ---------------------------------------------------------------------------
;;; Impulse
key.n()

;;; ---------------------------------------------------------------------------
;;; Actions
    show("towertesting", true)

    region_difficulty = 6 * {kIdleRegion} + {kIdleDifficulty}
    tower_testing_type = 3 ; Idle
    executesync("Tower/_Select Level")
    gu("region")
    gu("difficulty")

    {relclick(0.15, 0.07)} ; "Launch" button

    gds({lastTime("Tower")}, round(gdg("time")))

    wait(60.0)
    {relclick(0.5, 0.2)} ; "Stop" button
    
    show("towertesting", false)
    
