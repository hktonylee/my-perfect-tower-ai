:import [Library]
:import Factory/[CraftMagic]

;;; ---------------------------------------------------------------------------
;;; Declarations
:global int _1
:local int fromDustTier

;;; ---------------------------------------------------------------------------
;;; Conditions
isopen("factory")

;;; ---------------------------------------------------------------------------
;;; Macros
#minLowerTierCount 1000.0
#minHigherTierCount 200.0

#minIngotCount 3000.0

#maxMixerCount 6000.0

; Tier1: 1440
; Tier2: 500
; Tier3: 290
#maxCrusherCount(tier) (12000. / i2d({tier}))


;;; ---------------------------------------------------------------------------
;;; Actions
    fromDustTier = _1

    ; Make dust from lump
    {craftMagic.2( \
        "lump", fromDustTier, \
        {itemLimitMin("dust", fromDustTier, {minLowerTierCount}, 4.)}, \
        {itemLimitMin("dust", fromDustTier + 1, {minHigherTierCount}, 1.)} \
    )}

    ; If mixer is working, don't add more to it
    gotoif(SKIP_MIXER, active("mixer"))

    ; Make lump, so as to mix the lump into higher tier dust
    produce("lump", fromDustTier, \
        double.min({maxMixerCount}, count("lump", fromDustTier)), \
        "mixer" \
    )

SKIP_MIXER:

    ; If crusher is working, don't add more to it
    gotoif(SKIP_CRUSHER, active("crusher"))

    ; Make dust from orc
    produce("ore", fromDustTier, \
        double.min({maxCrusherCount(fromDustTier)}, count("ore", fromDustTier)), \
        "crusher" \
    )

    ; Make dust from ingot
    {produceMagic.2( \
        "ingot", fromDustTier, "crusher", \
        {minIngotCount}, \
        {itemLimitMin("ingot", fromDustTier, 3000., 1.)} \
    )}

SKIP_CRUSHER:
